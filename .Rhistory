ggplot(df, aes(x = df[,2], y = df[,1])) + geom_bar(stat = "identity", width = tamanho) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank())
}
} else {
for (i in 1:nrow(df)) {
if (is.na(df[i,3])) {
df[i,3] <- df[i,2]
}
}
for (i in 1:nrow(df)) {
df$avg[i] <- mean(c(df[i,2], df[i,3]))
}
df[,1] <- factor(df[,1], levels = df[order(df[,4]),1])
ggplot(df) + geom_pointrange(aes(x = df[,1], y = df[,4], ymin = df[,2], ymax = df[,3]), size = tamanho) + coord_flip() + theme_classic() + ggtitle(texto) +
ylab(titulo) + xlab(valor) + scale_y_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank()) +
geom_hline(yintercept = intercept)
}
}
df <- fread("fator, RR, max
Avental com luvas seladas, 0.09, 0.78
Avental com vedação no pescoço e punhos, 0.01, 0.55
Remoção de luvas e avental em uma etapa, 0.05, 0.77
Luvas duplas, 0.17, 0.66", fill = T, sep = ",")
tbl.risk(df, "", "Risco relativo de contaminação", "Estratégias de uso de EPI", 0.5, 2, 1, F)
df <- fread("fator, OR, max
Infecções respiratórias (ECR), 0.64, 1.24
Infecções respiratórias (Coorte), 0.03, 6.41
Infecções respiratórias (Caso-controle), 0.25, 3.36
Síndrome gripal (ECR), 0.19, 1.41
Absenteísmo (ECR), 0.57, 1.5", fill = T, sep = ",")
tbl.risk(df, "", "Odds Ratio", "Uso de N95 x máscaras cirúrgicas", 0.5, 10, 1, F)
df <- fread("fator, tempo
Cobre, 8, 24
Cartolina, 24, 48
Aço inox, 48
Plástico, 72", fill = T)
tbl.risk(df, "", "Tempo para inativação (horas)", "Vias de transmissão (SARS e SARS-CoV-2)", 0.5, 80, 1, F)
df <- seq(30,40, length.out = 20)
plot(df, ylim = c(40,20), type = "l", ylab = "Ct", xlab = "Dias após início dos sintomas", main = "Carga viral de SARS-CoV-2")
abline(h = 40)
df <- fread("fator: aOR
Distanciamento pessoal: 0.09: 0.38
Uso de máscaras: 0.07: 0.34
Proteção ocular: 0.12: 0.39",
fill = T, sep = ':')
tbl.risk(df, "", "Odds Ratio ajustado", "Fatores de proteção na transmissão (COVID-19)", 0.5, 2, 1, F)
df <- fread("fator: distancia: max
Com óculos e máscara: 80: 90
Com máscara: 60
Sem máscara: 30",
fill = T, sep = ':')
tbl.risk(df, "", "Distância (cm)", "Distanciamento de pessoas usando EPIs", 0.5, 100, 0, T)
df <- fread("fator: RR: max
Todas as infecções: 1.69: 100.07
Síndrome gripal: 1.45: 28.65
Confirmação laboratorial: 1.01: 2.94",
fill = T, sep = ':')
tbl.risk(df, "", "Risco relativo", "Risco do uso de máscaras caseiras x cirúrgicas", 0.5, 101, 1, T)
df <- fread("fator: porcent
Coronavírus: 30
Coronavírus (com máscara): 0
Influenza: 26
Influenza (com máscara): 4
Rinovírus: 28
Rinovírus (com máscara): 22",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem de positivação", "Transmissão de partículas > 5 μm", 0.5, 101, 0, T)
df <- fread("fator: porcent
Coronavírus: 40
Coronavírus (com máscara): 0
Influenza: 35
Influenza (com máscara): 22
Rinovírus: 56
Rinovírus (com máscara): 38",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem de positivação", "Transmissão de partículas < 5 μm", 0.5, 101, 0, T)
suppressWarnings(suppressMessages(drogas("quetiapine", 50)))
library(rvest)
library(XML)
drogas <- function(c, criterio){
c <- "quetiapine"
SMILES <- paste0("https://cactus.nci.nih.gov/chemical/structure/", c, "/smiles")
SMILES <- html_text(read_html(SMILES))
IUPAC <- paste0("https://cactus.nci.nih.gov/chemical/structure/", SMILES, "/iupac_name")
IUPAC <- html_text(read_html(IUPAC))
affinity <- paste0("http://bindingdb.org/axis2/services/BDBService/getTargetByCompound?smiles=", SMILES, "&cutoff=0.8")
af.parse <- xmlParse(affinity)
af.df <- xmlToDataFrame(af.parse)
af.df <- af.df[which(af.df$affinity_type == "Ki" & af.df$species == "Homo sapiens (Human)"),]
af.df$affinity <- as.numeric(af.df$affinity)
af.df <- af.df[order(af.df$affinity), c("target", "affinity")]
af.df <- af.df[which(is.na(af.df$affinity) == F),]
new.df <- data.frame(x = 1, ymin = 2, y = 3, ymax = 4)
counter <- 0
for (i in unique(af.df$target)) {
counter <- counter + 1
new.df[counter, 1] <- i
new.df[counter, 2] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.75)[[1]]
new.df[counter, 3] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.5)[[1]]
new.df[counter, 4] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.25)[[1]]
}
tbl.risk(new.df[which(new.df$y<criterio),c("x", "y")], "", "Ki", paste0("Afinidades da ", c, "\nKi < ", criterio), 0.5, criterio, ponto = T)
}
suppressWarnings(suppressMessages(drogas("quetiapine", 50)))
df <- fread("fator: alívio
Difenidramina: 100
Difenidramina + Cimetidina: 92
Cimetidina: 60",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem que obteve alívio", "Tratamento de prurido alérgico", 0.5, 100, ponto = F)
df <- fread("fator: alívio
Difenidramina: 46
Difenidramina + Cimetidina: 92
Cimetidina: 80",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem que obteve alívio", "Tratamento de urticária aguda", 0.5, 100, F)
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(xtable)))
suppressWarnings(suppressMessages(library(kableExtra)))
tbl.risk <- function(df, valor, titulo, texto, tamanho=0.5, ponto = T, limite = 100){
df <- data.frame(df)
df[,1] <- as.factor(df[,1])
df[,1] <- factor(df[,1], levels = df[order(df[,2]),1])
if (ncol(df) == 2) {
if (ponto == T) {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_point(size = tamanho*4) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
geom_vline(xintercept = 0) +
theme(axis.line = element_blank())
} else {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_bar(stat = "identity", width = tamanho) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank())
}
} else {
for (i in 1:nrow(df)) {
if (is.na(df[i,3])) {
df[i,3] <- df[i,2]
}
}
for (i in 1:nrow(df)) {
df$avg[i] <- mean(c(df[i,2], df[i,3]))
}
df[,1] <- factor(df[,1], levels = df[order(df[,4]),1])
ggplot(df) + geom_pointrange(aes(x = df[,1], y = df[,4], ymin = df[,2], ymax = df[,3]), size = tamanho) + coord_flip() + theme_classic() + ggtitle(texto) +
ylab(titulo) + xlab(valor) + scale_y_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank()) +
geom_hline(yintercept = 0)
}
}
df <- fread("fator, RR, max
Avental com luvas seladas, 0.09, 0.78
Avental com vedação no pescoço e punhos, 0.01, 0.55
Remoção de luvas e avental em uma etapa, 0.05, 0.77
Luvas duplas, 0.17, 0.66", fill = T, sep = ",")
tbl.risk(df, "", "Risco relativo de contaminação", "Estratégias de uso de EPI", 0.5, 2, F, 1)
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(xtable)))
suppressWarnings(suppressMessages(library(kableExtra)))
tbl.risk <- function(df, valor, titulo, texto, tamanho=0.5, ponto = T, limite = 100){
df <- data.frame(df)
df[,1] <- as.factor(df[,1])
df[,1] <- factor(df[,1], levels = df[order(df[,2]),1])
if (ncol(df) == 2) {
if (ponto == T) {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_point(size = tamanho*4) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
geom_vline(xintercept = 0) +
theme(axis.line = element_blank())
} else {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_bar(stat = "identity", width = tamanho) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank())
}
} else {
for (i in 1:nrow(df)) {
if (is.na(df[i,3])) {
df[i,3] <- df[i,2]
}
}
for (i in 1:nrow(df)) {
df$avg[i] <- mean(c(df[i,2], df[i,3]))
}
df[,1] <- factor(df[,1], levels = df[order(df[,4]),1])
ggplot(df) + geom_pointrange(aes(x = df[,1], y = df[,4], ymin = df[,2], ymax = df[,3]), size = tamanho) + coord_flip() + theme_classic() + ggtitle(texto) +
ylab(titulo) + xlab(valor) + scale_y_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank()) +
geom_hline(yintercept = 0)
}
}
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(xtable)))
suppressWarnings(suppressMessages(library(kableExtra)))
tbl.risk <- function(df, valor, titulo, texto, tamanho=0.5, limite = 100, ponto = T, intercept = 0){
df <- data.frame(df)
df[,1] <- as.factor(df[,1])
df[,1] <- factor(df[,1], levels = df[order(df[,2]),1])
if (ncol(df) == 2) {
if (ponto == T) {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_point(size = tamanho*4) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
geom_vline(xintercept = 0) +
theme(axis.line = element_blank())
} else {
ggplot(df, aes(x = df[,2], y = df[,1])) + geom_bar(stat = "identity", width = tamanho) + theme_classic() + ggtitle(texto) +
xlab(titulo) + ylab(valor) + scale_x_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank())
}
} else {
for (i in 1:nrow(df)) {
if (is.na(df[i,3])) {
df[i,3] <- df[i,2]
}
}
for (i in 1:nrow(df)) {
df$avg[i] <- mean(c(df[i,2], df[i,3]))
}
df[,1] <- factor(df[,1], levels = df[order(df[,4]),1])
ggplot(df) + geom_pointrange(aes(x = df[,1], y = df[,4], ymin = df[,2], ymax = df[,3]), size = tamanho) + coord_flip() + theme_classic() + ggtitle(texto) +
ylab(titulo) + xlab(valor) + scale_y_continuous(limits = c(0,limite)) +
theme(axis.line = element_blank()) +
geom_hline(yintercept = intercept)
}
}
df <- fread("fator: porcent
Coronavírus: 40
Coronavírus (com máscara): 0
Influenza: 35
Influenza (com máscara): 22
Rinovírus: 56
Rinovírus (com máscara): 38",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem de positivação", "Transmissão de partículas < 5 μm", 0.5, 101, T, 0)
df <- fread("fator: porcent
Coronavírus: 30
Coronavírus (com máscara): 0
Influenza: 26
Influenza (com máscara): 4
Rinovírus: 28
Rinovírus (com máscara): 22",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem de positivação", "Transmissão de partículas > 5 μm", 0.5, 101, T, 0)
df <- fread("fator: RR: max
Todas as infecções: 1.69: 100.07
Síndrome gripal: 1.45: 28.65
Confirmação laboratorial: 1.01: 2.94",
fill = T, sep = ':')
tbl.risk(df, "", "Risco relativo", "Risco do uso de máscaras caseiras x cirúrgicas", 0.5, 101, T, 1)
df <- fread("fator: distancia: max
Com óculos e máscara: 80: 90
Com máscara: 60
Sem máscara: 30",
fill = T, sep = ':')
tbl.risk(df, "", "Distância (cm)", "Distanciamento de pessoas usando EPIs", 0.5, 100, T, 0)
df <- fread("fator: aOR
Distanciamento pessoal: 0.09: 0.38
Uso de máscaras: 0.07: 0.34
Proteção ocular: 0.12: 0.39",
fill = T, sep = ':')
tbl.risk(df, "", "Odds Ratio ajustado", "Fatores de proteção na transmissão (COVID-19)", 0.5, 2, F, 1)
df <- fread("fator, tempo
Cobre, 8, 24
Cartolina, 24, 48
Aço inox, 48
Plástico, 72", fill = T)
tbl.risk(df, "", "Tempo para inativação (horas)", "Vias de transmissão (SARS e SARS-CoV-2)", 0.5, 80, F, 1)
df <- fread("fator, OR, max
Infecções respiratórias (ECR), 0.64, 1.24
Infecções respiratórias (Coorte), 0.03, 6.41
Infecções respiratórias (Caso-controle), 0.25, 3.36
Síndrome gripal (ECR), 0.19, 1.41
Absenteísmo (ECR), 0.57, 1.5", fill = T, sep = ",")
tbl.risk(df, "", "Odds Ratio", "Uso de N95 x máscaras cirúrgicas", 0.5, 10, F, 1)
df <- fread("fator, RR, max
Avental com luvas seladas, 0.09, 0.78
Avental com vedação no pescoço e punhos, 0.01, 0.55
Remoção de luvas e avental em uma etapa, 0.05, 0.77
Luvas duplas, 0.17, 0.66", fill = T, sep = ",")
tbl.risk(df, "", "Risco relativo de contaminação", "Estratégias de uso de EPI", 0.5, 2, F, 1)
## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5880612/
df <- fread("HPV, prob
HPV16,65.6
HPV18,12.6
HPV58,12.6
HPV52,6.5
HPV33,5.5
HPV31,3.5
HPV59,2.6
HPV45,2.1
HPV39,2.2
HPV51,1.4
HPV56,1.3
HPV68,1.3
HPV35,1.2
HPV66,0.7", sep = ",")
df
tbl.risk(df, "", "Porcentagem em cânceres cervicais", "Prevalência de subtipos de HPV em CA cervical", 0.5, 100, T)
## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5880612/
df <- fread("HPV, prob
HPV16,65.6
HPV18,12.6
HPV58,12.6
HPV52,6.5
HPV33,5.5
HPV31,3.5
HPV59,2.6
HPV45,2.1
HPV39,2.2
HPV51,1.4
HPV56,1.3
HPV68,1.3
HPV35,1.2
HPV66,0.7", sep = ",")
df
tbl.risk(df, "", "Porcentagem em cânceres cervicais", "Prevalência de subtipos de HPV em CA cervical", 0.5, 100, T)
## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5880612/
df <- fread("HPV, prob
HPV16,65.6
HPV18,12.6
HPV58,12.6
HPV52,6.5
HPV33,5.5
HPV31,3.5
HPV59,2.6
HPV45,2.1
HPV39,2.2
HPV51,1.4
HPV56,1.3
HPV68,1.3
HPV35,1.2
HPV66,0.7", sep = ",")
df
tbl.risk(df, "", "Porcentagem em cânceres cervicais", "Prevalência de subtipos de HPV em CA cervical", 0.5, 100, T)
## https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5880612/
df <- fread("HPV, prob
HPV16,65.6
HPV18,12.6
HPV58,12.6
HPV52,6.5
HPV33,5.5
HPV31,3.5
HPV59,2.6
HPV45,2.1
HPV39,2.2
HPV51,1.4
HPV56,1.3
HPV68,1.3
HPV35,1.2
HPV66,0.7", sep = ",")
df
tbl.risk(df, "", "Porcentagem em cânceres cervicais", "Prevalência de subtipos de HPV em CA cervical", 0.5, 100, T)
df <- fread("
genero:porcentagem
Roseburia:4.42
Megasphaera:2.97
Faecalibacterium:2.31
Ruminococcaceae:1.95
Atopobium:1
Blautia:0.91
Clostridium:0.65
Lachnospiraceae:0.59
", sep = ":")
tbl.risk(df, "", "Porcentagem das vaginites", "Vaginites por Chlamydia", 0.5, 10, T)
df <- fread("
genero:porcentagem
Gardnerella:11.44
Prevotella:9.15
Megasphaera:8.64
Sneathia:7.76
Atopobium:4.92
Roseburia:3.51
Clostridium:2.14
Aerococcus:2.06
Dialister:2.02
Parvimonas:1.39
", sep = ":")
tbl.risk(df, "", "Porcentagem das vaginoses", "Vaginoses bacterianas", 0.5, 20, T)
df <- fread("
genero:porcentagem
Gardnerella:11.44
Prevotella:9.15
Megasphaera:8.64
Sneathia:7.76
Atopobium:4.92
Roseburia:3.51
Clostridium:2.14
Aerococcus:2.06
Dialister:2.02
Parvimonas:1.39
", sep = ":")
tbl.risk(df, "", "Porcentagem das vaginoses", "Vaginoses bacterianas", 0.5, 20, T)
df <- fread("
genero:porcentagem
Roseburia:4.42
Megasphaera:2.97
Faecalibacterium:2.31
Ruminococcaceae:1.95
Atopobium:1
Blautia:0.91
Clostridium:0.65
Lachnospiraceae:0.59
", sep = ":")
tbl.risk(df, "", "Porcentagem das vaginites", "Vaginites por Chlamydia", 0.5, 10, T)
df <- fread("fator: alívio
Difenidramina: 100
Difenidramina + Cimetidina: 92
Cimetidina: 60",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem que obteve alívio", "Tratamento de prurido alérgico", 0.5, 100, F)
df <- fread("fator: alívio
Difenidramina: 46
Difenidramina + Cimetidina: 92
Cimetidina: 80",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem que obteve alívio", "Tratamento de urticária aguda", 0.5, 100, F)
df <- fread("fator: alívio
Clorfeniramina: 4.2: 8.3
Clorfeniramina + Dexametasona + Prednisolona: 25: 29.2",
fill = T, sep = ':')
tbl.risk(df, "", "Porcentagem de recorrência após 7 dias", "Tratamento de urticária aguda", 0.5, 50, F)
df <- fread("
Droga, Dose, Ki, RO4, RO24
Desloratadina, 5, 0.4, 71, 43
Fexofenadina, 120, 10, 95, 12
Levocetirizina, 5, 3, 90, 57
", fill = T, sep = ",")
df <- fread("
Droga, Dose, Ki, RO4, RO24
Desloratadina, 5, 0.4, 71, 43
Fexofenadina, 120, 10, 95, 12
Levocetirizina, 5, 3, 90, 57
", fill = T, sep = ",")
kable(df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
df <- fread("
Droga, T12
Difenidramina, 8.61
Clorfeniramina, 27
Hidroxizina, 25
Prometazina, 19
", fill = T, sep = ",")
kable(df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
df <- fread("
Droga, T12 (h)
Difenidramina, 8.61
Clorfeniramina, 27
Hidroxizina, 25
Prometazina, 19
", fill = T, sep = ",")
kable(df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
suppressWarnings(suppressMessages(drogas("levocetirizine", 50)))
warnings()
drogas("levocetirizine", 50)
drogas <- function(c, criterio){
SMILES <- paste0("https://cactus.nci.nih.gov/chemical/structure/", c, "/smiles")
SMILES <- html_text(read_html(SMILES))
IUPAC <- paste0("https://cactus.nci.nih.gov/chemical/structure/", SMILES, "/iupac_name")
IUPAC <- html_text(read_html(IUPAC))
affinity <- paste0("http://bindingdb.org/axis2/services/BDBService/getTargetByCompound?smiles=", SMILES, "&cutoff=0.8")
af.parse <- xmlParse(affinity)
af.df <- xmlToDataFrame(af.parse)
af.df <- af.df[which(af.df$affinity_type == "Ki" & af.df$species == "Homo sapiens (Human)"),]
af.df$affinity <- as.numeric(af.df$affinity)
af.df <- af.df[order(af.df$affinity), c("target", "affinity")]
af.df <- af.df[which(is.na(af.df$affinity) == F),]
new.df <- data.frame(x = 1, ymin = 2, y = 3, ymax = 4)
counter <- 0
for (i in unique(af.df$target)) {
counter <- counter + 1
new.df[counter, 1] <- i
new.df[counter, 2] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.75)[[1]]
new.df[counter, 3] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.5)[[1]]
new.df[counter, 4] <- quantile(af.df[which(af.df$target==i), "affinity"], 0.25)[[1]]
}
tbl.risk(new.df[which(new.df$y<criterio),c("x", "y")], "", "Ki", paste0("Afinidades da ", c, "\nKi < ", criterio), 0.5, criterio, T)
}
drogas("levocetirizine", 50)
drogas("levocetirizine", 1000)
library(shiny)
library(shinyMobile)
runApp('PWA')
runApp('PWA')
runApp('PWA')
runApp('PWA')
runApp('PWA')
runApp('PWA')
require(shinyBS)
install.packages("shinyBS")
require(shinyBS)
runApp('PWA')
runApp('PWA')
runApp('PWA')
runApp('PWA')
runApp('PWA')
preview_mobile(appPath = "~/app.R", device = "galaxyNote8")
preview_mobile(appPath = "~/app.R", port = 3838, device = "galaxyNote8")
preview_mobile(url = "https://rnahumaf.shinyapps.io/RMed", device = "iphone8")
library(data.table)
render_book("index.Rmd")
library(bookdown)
render_book("index.Rmd")
render_book("index.Rmd")
render_book("index.Rmd")
setwd("~/R_WorkingDirectory/Covid19Website")
blogdown:::serve_site()
